AWSTemplateFormatVersion: '2010-09-09'
Description: 'IAM role for AI Wizard Terraform deployment with managed policies'

Parameters:
  TrustedAccount:
    Type: String
    Description: The AWS account ID that is allowed to assume this role
  Route53ZoneId:
    Type: String
    Description: The Route53 Hosted Zone ID for the domain
  S3BucketRegion:
    Type: String
    Description: The region of the S3 bucket

Resources:
  # Create the new managed policy for Zappa and serverless resources
  AIWizardServerlessManagedPolicy:
    Type: 'AWS::IAM::ManagedPolicy'
    Properties:
      ManagedPolicyName: AIWizardServerlessManagedPolicy
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Action:
              - 's3:CreateBucket'
              - 's3:DeleteBucket'
              - 's3:PutObject'
              - 's3:Describe*'
              - 's3:Get*'
              - 's3:List*'
              - 's3:DeleteObject'
              - 's3:DeleteBucketPolicy'
              - 's3:PutBucketPolicy'
              - 's3:PutBucketTagging'
              - 's3:PutBucketWebsite'
              - 's3:PutBucketPublicAccessBlock'
            Resource: 
              - !Sub 'arn:aws:s3:::ai-wizard-zappa-deployments-${TrustedAccount}-${S3BucketRegion}'
              - !Sub 'arn:aws:s3:::ai-wizard-zappa-deployments-${TrustedAccount}-${S3BucketRegion}/*'
              - !Sub 'arn:aws:s3:::ai-wizard-frontend-${TrustedAccount}-${S3BucketRegion}'
              - !Sub 'arn:aws:s3:::ai-wizard-frontend-${TrustedAccount}-${S3BucketRegion}/*'
          - Effect: Allow
            Action:
              - 'dynamodb:CreateTable'
              - 'dynamodb:DeleteTable'
              - 'dynamodb:Describe*'
              - 'dynamodb:Get*'
              - 'dynamodb:List*'
              - 'dynamodb:PutItem'
              - 'dynamodb:UpdateItem'
              - 'dynamodb:DeleteItem'
              - 'dynamodb:Query'
              - 'dynamodb:Scan'
              - 'dynamodb:TagResource'
              - 'dynamodb:UntagResource'
            Resource: 'arn:aws:dynamodb:*:*:table/ai-wizard-table'
          - Effect: Allow
            Action:
              - 'lambda:CreateFunction'
              - 'lambda:DeleteFunction'
              - 'lambda:Describe*'
              - 'lambda:Get*'
              - 'lambda:List*'
              - 'lambda:InvokeFunction'
              - 'lambda:UpdateFunctionCode'
              - 'lambda:UpdateFunctionConfiguration'
              - 'lambda:TagResource'
              - 'lambda:UntagResource'
            Resource: 'arn:aws:lambda:*:*:function:ai-wizard-lambda'
          - Effect: Allow
            Action:
              - 'apigateway:*'
            Resource: '*'
          - Effect: Allow
            Action:
              - 'cloudfront:CreateDistribution'
              - 'cloudfront:Describe*'
              - 'cloudfront:Get*'
              - 'cloudfront:List*'
              - 'cloudfront:UpdateDistribution'
              - 'cloudfront:DeleteDistribution'
              - 'cloudfront:TagResource'
              - 'cloudfront:UntagResource'
            Resource: '*'
          - Effect: Allow
            Action:
              - 'route53:ChangeResourceRecordSets'
            Resource: !Sub 'arn:aws:route53:::hostedzone/${Route53ZoneId}'
          - Effect: Allow
            Action:
              - 'route53:Describe*' 
              - 'route53:Get*'
              - 'route53:List*'
            Resource: '*'
          - Effect: Allow
            Action:
              - 'acm:RequestCertificate'
              - 'acm:Describe*'
              - 'acm:Get*'
              - 'acm:List*'
              - 'acm:DeleteCertificate'
              - 'acm:AddTagsToCertificate'
              - 'acm:RemoveTagsFromCertificate'
            Resource: '*'
          - Effect: Allow
            Action:
              - 'iam:CreateRole'
              - 'iam:DeleteRole'
              - 'iam:AttachRolePolicy'
              - 'iam:DetachRolePolicy'
              - 'iam:Describe*'
              - 'iam:Get*'
              - 'iam:List*'
              - 'iam:PassRole'
              - 'iam:TagRole'
              - 'iam:UntagRole'
            Resource: !Sub 'arn:aws:iam::${TrustedAccount}:role/ai-wizard-lambda-exec-role'
          - Effect: Allow
            Action: 
              - 'sts:AssumeRole'
              - 'sts:TagSession'
            Resource: 
              - !Sub 'arn:aws:iam::${TrustedAccount}:role/AIWizardDeploymentRole'

  # Create the IAM role
  AIWizardDeploymentRole:
    Type: 'AWS::IAM::Role'
    Properties:
      RoleName: AIWizardDeploymentRole
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              AWS: 
                - !Sub 'arn:aws:iam::${TrustedAccount}:root'
                - !Sub 'arn:aws:iam::${TrustedAccount}:user/aws-deploy'
            Action: 
              - 'sts:AssumeRole'
              - 'sts:TagSession'
      ManagedPolicyArns:
        - !Ref AIWizardServerlessManagedPolicy

Outputs:
  RoleARN:
    Description: The ARN of the created IAM role
    Value: !GetAtt AIWizardDeploymentRole.Arn
    Export:
      Name: AIWizardDeploymentRoleARN
