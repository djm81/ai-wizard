AWSTemplateFormatVersion: '2010-09-09'
Description: 'IAM role for AI Wizard Terraform deployment with managed policies'

Parameters:
  TrustedAccount:
    Type: String
    Description: The AWS account ID that is allowed to assume this role

Resources:
  # Create the managed policy
  AIWizardManagedPolicy:
    Type: 'AWS::IAM::Policy'
    Properties:
      PolicyName: AIWizardManagedPolicy
      Roles:
        - !Ref AIWizardDeploymentRole
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          # S3 Permissions for Terraform Backend
          - Effect: Allow
            Action:
              - 's3:CreateBucket'
              - 's3:DeleteObject'
              - 's3:GetObject'
              - 's3:ListBucket'
              - 's3:PutObject'
            Resource: 
              - "arn:aws:s3:::ai-wizard-terraform-state-*"
              - "arn:aws:s3:::ai-wizard-terraform-state-*/*"
            Condition:
              StringEquals:
                "aws:ResourceTag/Project": "ai-wizard"

          # CloudWatch Logs Permissions
          - Effect: Allow
            Action:
              - 'logs:CreateLogGroup'
              - 'logs:CreateLogStream'
              - 'logs:DescribeLogGroups'
              - 'logs:DescribeLogStreams'
              - 'logs:FilterLogEvents'
              - 'logs:PutLogEvents'
            Resource: '*'
            Condition:
              StringEquals:
                "aws:ResourceTag/Project": "ai-wizard"

          # ECR Permissions
          - Effect: Allow
            Action:
              - 'ecr:BatchCheckLayerAvailability'
              - 'ecr:BatchGetImage'
              - 'ecr:CompleteLayerUpload'
              - 'ecr:CreateRepository'
              - 'ecr:DeleteRepository'
              - 'ecr:DeleteRepositoryPolicy'
              - 'ecr:DescribeImages'
              - 'ecr:DescribeRepositories'
              - 'ecr:GetDownloadUrlForLayer'
              - 'ecr:GetRepositoryPolicy'
              - 'ecr:InitiateLayerUpload'
              - 'ecr:ListImages'
              - 'ecr:ListTagsForResource'
              - 'ecr:PutImage'
              - 'ecr:SetRepositoryPolicy'
              - 'ecr:TagResource'
              - 'ecr:UntagResource'
              - 'ecr:UploadLayerPart'
            Resource: '*'
            Condition:
              StringEquals:
                "aws:ResourceTag/Project": "ai-wizard"

          # ECR Global Permissions
          - Effect: Allow
            Action:
              - 'ecr:GetAuthorizationToken'
            Resource: '*'

          # ECS Permissions
          - Effect: Allow
            Action:
              - 'ecs:CreateCluster'
              - 'ecs:CreateService'
              - 'ecs:DeleteService'
              - 'ecs:DescribeClusters'
              - 'ecs:DescribeServices'
              - 'ecs:DescribeTasks'
              - 'ecs:DescribeTaskDefinition'
              - 'ecs:DescribeContainerInstances'
              - 'ecs:ListClusters'
              - 'ecs:ListServices'
              - 'ecs:ListTasks'
              - 'ecs:ListContainerInstances'
              - 'ecs:RegisterTaskDefinition'
              - 'ecs:TagResource'
              - 'ecs:UntagResource'
              - 'ecs:UpdateService'
            Resource: '*'
            Condition:
              StringEquals:
                "aws:ResourceTag/Project": "ai-wizard"

          # RDS Permissions
          - Effect: Allow
            Action:
              - 'rds:CreateDBInstance'
              - 'rds:CreateDBSubnetGroup'
              - 'rds:DeleteDBSubnetGroup'
              - 'rds:DeleteDBInstance'
              - 'rds:DescribeDBInstances'
              - 'rds:ModifyDBInstance'
            Resource: '*'
            Condition:
              StringEquals:
                "aws:ResourceTag/Project": "ai-wizard"

          # VPC Permissions
          - Effect: Allow
            Action:
              - 'ec2:AuthorizeSecurityGroupIngress'
              - 'ec2:CreateSecurityGroup'
              - 'ec2:CreateSubnet'
              - 'ec2:CreateVpc'
              - 'ec2:DescribeAddresses'
              - 'ec2:DescribeSecurityGroups'
              - 'ec2:DescribeSubnets'
              - 'ec2:DescribeVpcs'
              - 'ec2:RevokeSecurityGroupIngress'
            Resource: '*'
            Condition:
              StringEquals:
                "aws:ResourceTag/Project": "ai-wizard"

          # VPC Permissions without tags
          - Effect: Allow
            Action:
              - 'ec2:AllocateAddress'
              - 'ec2:CreateTags'
              - 'ec2:DeleteTags'
              - 'ec2:DescribeTags'
              - 'ec2:DescribeVpcs'
            Resource: '*'
              
          # Secrets Manager Permissions
          - Effect: Allow
            Action:
              - 'secretsmanager:CreateSecret'
              - 'secretsmanager:DeleteSecret'
              - 'secretsmanager:GetSecretValue'
              - 'secretsmanager:PutSecretValue'
              - 'secretsmanager:UpdateSecret'
            Resource: '*'
            Condition:
              StringEquals:
                "aws:ResourceTag/Project": "ai-wizard"

          # SSM Permissions
          - Effect: Allow
            Action:
              - 'ssm:DeleteParameter'
              - 'ssm:GetParameter'
              - 'ssm:PutParameter'
            Resource: '*'
            Condition:
              StringEquals:
                "aws:ResourceTag/Project": "ai-wizard"

          # Allow tagging the session
          - Effect: Allow
            Action: 
              - 'sts:AssumeRole'
              - 'sts:GetCallerIdentity'
              - 'sts:GetSessionToken'
              - 'sts:TagSession'
            Resource: '*'

          - Effect: Allow
            Action: 'iam:CreateRole'
            Resource: !Sub 'arn:aws:iam::${TrustedAccount}:role/ai-wizard-ecs-task-execution-role'

          - Effect: Allow
            Action: 'iam:PassRole'
            Resource: '*'

          - Effect: Allow
            Action: 
              - 'sts:TagSession'
              - 'sts:AssumeRole'
            Resource: !Sub 'arn:aws:iam::${TrustedAccount}:role/AIWizardDeploymentRole'

          # AWS Certificate Manager Permissions
          - Effect: Allow
            Action:
              - 'acm:AddTagsToCertificate'
              - 'acm:DeleteCertificate'
              - 'acm:DescribeCertificate'
              - 'acm:GetCertificate'
              - 'acm:ListCertificates'
              - 'acm:ListTagsForCertificate'
              - 'acm:RequestCertificate'
              - 'acm:RemoveTagsFromCertificate'
              - 'acm:UpdateCertificateOptions'
            Resource: '*'
            Condition:
              StringEquals:
                "aws:ResourceTag/Project": "ai-wizard"

          # Route53 Permissions for DNS Validation
          - Effect: Allow
            Action:
              - 'route53:ChangeResourceRecordSets'
              - 'route53:ChangeTagsForResource'
              - 'route53:GetChange'
              - 'route53:GetHostedZone'
              - 'route53:ListHostedZones'
              - 'route53:ListResourceRecordSets'
              - 'route53:ListTagsForResource'
              - 'route53:ListHostedZonesByName'
              - 'route53:ListHostedZonesByVPC'
              - 'route53:ListTagsForResource'
            Resource: '*'

  # Create the IAM role
  AIWizardDeploymentRole:
    Type: 'AWS::IAM::Role'
    Properties:
      RoleName: AIWizardDeploymentRole
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              AWS: 
                - !Sub 'arn:aws:iam::${TrustedAccount}:root'
                - !Sub 'arn:aws:iam::${TrustedAccount}:user/aws-deploy'
            Action: 
              - 'sts:AssumeRole'
              - 'sts:TagSession'
      Policies: []  # No inline policies, managed policy will be attached

Outputs:
  RoleARN:
    Description: The ARN of the created IAM role
    Value: !GetAtt AIWizardDeploymentRole.Arn
    Export:
      Name: AIWizardDeploymentRoleARN
